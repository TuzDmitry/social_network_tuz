{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/NewMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","prors","path","id","className","s","dialog","active","pict","src","alt","to","name","Message","props","message","ico","message_block","header","text","maxLength30","maxLengthCreator","ReduxNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","NewMessage","formData","console","log","addMessage","Dialogs","dialogsElements","dialogsPage","dialogs","map","key","messagesElements","messages","dialogsItems","block_conversation","sendingMessageBlock","DialogsContainer","compose","connect","state","dispatch","textMessage","action","addMessageActionCreator","withVerificationLogin"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,oBAAsB,qCAAqC,SAAW,0BAA0B,mBAAqB,sC,oBCAvND,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,2BAA2B,OAAS,2BAA2B,KAAO,2B,oBCAjJD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,uB,iHCkB9LC,EAdI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKH,UAAWC,IAAEG,KACbC,IAAI,kPACJC,IAAI,KACT,kBAAC,IAAD,CAASC,GAAIT,GAERD,EAAMW,Q,kBCMRC,EAhBC,SAACC,GACb,OACI,yBAAKV,UAAWC,IAAEU,SACd,yBAAKX,UAAWC,IAAEW,IACbP,IAAI,kPACJC,IAAI,KACT,yBAAKN,UAAWC,IAAEY,eACd,yBAAKb,UAAWC,IAAEa,QACd,qCAAe,uCAEnB,yBAAKd,UAAWC,IAAEc,MAAOL,EAAMC,Y,iCCC3CK,EAAYC,YAAiB,IAiB3BC,EAAsBC,YAAU,CAACC,KAAM,WAAjBD,EAfL,SAACT,GACpB,OACI,0BAAMW,SAAUX,EAAMY,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,2GACbC,UAAWC,IACXC,SAAU,CAACC,IAASZ,GACpBR,KAAM,aAGjB,8FAOGqB,EA7BI,SAACnB,GAKhB,OACI,kBAACQ,EAAD,CAAqBG,SALZ,SAACS,GACVC,QAAQC,IAAIF,EAASnB,SACrBD,EAAMuB,WAAWH,EAASnB,aCwBnBuB,EAzBC,SAACxB,GAEb,IAAIyB,EAAkBzB,EAAM0B,YAAYC,QAAQC,KAAI,SAACpC,GAAD,OAAY,kBAAC,EAAD,CAAYqC,IAAKrC,EAAOH,GACZS,KAAMN,EAAOM,KACbT,GAAIG,EAAOH,QACnFyC,EAAmB9B,EAAM0B,YAAYK,SAASH,KAAI,SAACvB,GAAD,OAAU,kBAAC,EAAD,CAASwB,IAAKxB,EAAKhB,GACVY,QAASI,EAAKJ,aAEvF,OACI,yBAAKX,UAAW,2BACZ,yBAAKA,UAAWC,IAAEoC,SACd,yBAAKrC,UAAWC,IAAEyC,cACbP,GAEL,yBAAKnC,UAAWC,IAAE0C,oBACd,yBAAK3C,UAAWC,IAAEwC,UAAWD,GAC7B,yBAAKxC,UAAWC,IAAE2C,qBACd,kBAAC,EAAD,CAAYX,WAAYvB,EAAMuB,kB,wBCehDY,EAAkBC,YACpBC,aA7BkB,SAACC,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,gBAGF,SAACa,GACtB,MAAO,CACHhB,WAAY,SAACiB,GACT,IAAIC,EAASC,YAAwBF,GACrCD,EAASE,QAqBjBE,IAFoBP,CAGtBZ,GAKaW","file":"static/js/3.add8e827.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1T_s6\",\"dialogsItems\":\"Dialogs_dialogsItems__3tF7l\",\"sendingMessageBlock\":\"Dialogs_sendingMessageBlock__BkBa2\",\"messages\":\"Dialogs_messages__1BXpH\",\"block_conversation\":\"Dialogs_block_conversation__2r81y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__2RUrl\",\"active\":\"DialogItem_active__2FuIW\",\"dialog\":\"DialogItem_dialog__3Wdnm\",\"pict\":\"DialogItem_pict__28aBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__3qQBL\",\"message\":\"Message_message__3m9ri\",\"message_block\":\"Message_message_block__1JnTJ\",\"header\":\"Message_header__E_8oM\",\"text\":\"Message_text__23VVN\",\"ico\":\"Message_ico__2Ozhl\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n/////////Вынесли Диалоги с Людьми в отдельную Компоненту////\r\nconst DialogItem = (prors) => {\r\n    let path = \"/dialogs/\" + prors.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img className={s.pict}\r\n                 src=\"http://img0.safereactor.cc/pics/post/full/Конор-Макгрегор-США-страны-полиция-5069300.jpeg\"\r\n                 alt=\"\"/>\r\n            <NavLink to={path}>\r\n\r\n                {prors.name}\r\n            </NavLink>\r\n        </div>);\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\n/////////Вынесли сообщения в отдельную Компоненту////\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <img className={s.ico}\r\n                 src=\"http://img0.safereactor.cc/pics/post/full/Конор-Макгрегор-США-страны-полиция-5069300.jpeg\"\r\n                 alt=\"\"/>\r\n            <div className={s.message_block}>\r\n                <div className={s.header}>\r\n                    <div>Dima</div><div>10:10</div>\r\n                </div>\r\n                <div className={s.text}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/formsControls/formsControls\";\r\n\r\nconst NewMessage = (props) => {\r\n    let onSubmit=(formData)=>{\r\n        console.log(formData.message)\r\n        props.addMessage(formData.message)\r\n    }\r\n    return (\r\n        <ReduxNewMessageForm onSubmit={onSubmit}/>\r\n    )\r\n}\r\n\r\nlet maxLength30=maxLengthCreator(30)\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Напишите что-нибудь'}\r\n                       component={Textarea}\r\n                       validate={[required,maxLength30]}\r\n                       name={'message'}\r\n                ></Field>\r\n            </div>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxNewMessageForm = reduxForm({form: 'message'})(NewMessageForm)\r\n\r\nexport default NewMessage","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessage from \"./Message/NewMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map((dialog) => <DialogItem key={dialog.id}\r\n                                                                                name={dialog.name}\r\n                                                                                id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map((text) => <Message key={text.id}\r\n                                                                             message={text.message}/>)\r\n\r\n    return (\r\n        <div className={'block-wrapper-container'}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.block_conversation}>\r\n                    <div className={s.messages}>{messagesElements}</div>\r\n                    <div className={s.sendingMessageBlock}>\r\n                        <NewMessage addMessage={props.addMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withVerificationLogin} from \"../../HOC/HOC\";\r\nimport {compose} from \"redux\";\r\n\r\n////react-redux -позволяет нам забыть про store.getState()/ store.dispatch и пользоваться сразу State/dispatch\r\n\r\n\r\nlet mapStateToProps = (state) => {////MapStateToProps---ф-я превратить стейт в пропсы\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (textMessage) => {\r\n            let action = addMessageActionCreator(textMessage)\r\n            dispatch(action)\r\n        },\r\n\r\n    }\r\n}\r\n\r\n//1) const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n//2) export const AuthRedirectContainer=(props)=>{\r\n//     if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n//     return <Dialogs {...props}/>\r\n// }\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\r\n\r\n\r\n//3) const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(withVerificationLogin(Dialogs))\r\n\r\n\r\nconst DialogsContainer =compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withVerificationLogin\r\n)(Dialogs)\r\n\r\n\r\n\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}